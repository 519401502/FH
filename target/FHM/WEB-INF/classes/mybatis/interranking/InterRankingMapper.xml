<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="InterRankingMapper">


    <!-- 新增-->
    <insert id="save" parameterType="pd">
		insert into TB_INTERRANKING(
			INTEGRAL,	
			INTEGRAL_ID,	
			CREATE_TIME,	
			UPDATE_TIME,	
			CREATE_TIMEMILLIS,	
			UPDATE_TIMEMILLIS,	
			INTERRANKING_ID
		) values (
			#{INTEGRAL},	
			#{INTEGRAL_ID},	
			#{CREATE_TIME},	
			#{UPDATE_TIME},	
			#{CREATE_TIMEMILLIS},	
			#{UPDATE_TIMEMILLIS},	
			#{INTERRANKING_ID}
		)
	</insert>


    <!-- 删除-->
    <delete id="delete" parameterType="pd">
		delete from TB_INTERRANKING
		where 
			INTERRANKING_ID = #{INTERRANKING_ID}
	</delete>


    <!-- 修改 -->
    <update id="edit" parameterType="pd">
		update  TB_INTERRANKING
			set 
				INTEGRAL = #{INTEGRAL},
				INTEGRAL_ID = #{INTEGRAL_ID},
				UPDATE_TIME = #{UPDATE_TIME},
				UPDATE_TIMEMILLIS = #{UPDATE_TIMEMILLIS},
			INTERRANKING_ID = INTERRANKING_ID
			where 
				INTERRANKING_ID = #{INTERRANKING_ID}

	</update>


    <!-- 通过积分ID获取数据 -->
    <select id="findByIntegralId" parameterType="pd" resultType="pd">
		select
		INTEGRAL,
		INTEGRAL_ID,
		CREATE_TIME,
		UPDATE_TIME,
		CREATE_TIMEMILLIS,
		UPDATE_TIMEMILLIS,
		INTERRANKING_ID
		from
		TB_INTERRANKING
		where
		INTEGRAL_ID = #{INTEGRAL_ID}
	</select>


    <!-- 通过ID获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
		select 
			INTEGRAL,	
			INTEGRAL_ID,	
			CREATE_TIME,	
			UPDATE_TIME,	
			CREATE_TIMEMILLIS,	
			UPDATE_TIMEMILLIS,	
			INTERRANKING_ID
		from 
			TB_INTERRANKING
		where 
			INTERRANKING_ID = #{INTERRANKING_ID}
	</select>


    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.INTEGRAL,	
				a.INTEGRAL_ID,	
				a.CREATE_TIME,	
				a.UPDATE_TIME,	
				a.CREATE_TIMEMILLIS,	
				a.UPDATE_TIMEMILLIS,	
				a.INTERRANKING_ID
		from 
				TB_INTERRANKING a
	</select>

    <!-- 列表(全部) -->
    <select id="listAll" parameterType="pd" resultType="pd">
		select
				a.INTEGRAL,	
				a.INTEGRAL_ID,	
				a.CREATE_TIME,	
				a.UPDATE_TIME,	
				a.CREATE_TIMEMILLIS,	
				a.UPDATE_TIMEMILLIS,	
				a.INTERRANKING_ID
		from 
				TB_INTERRANKING a
	</select>

    <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from TB_INTERRANKING
        where
        INTERRANKING_ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--获取积分前后以及本身数据第二种方案-->
    <select id="ranking" parameterType="pd" resultType="pd">
        select INTEGRAL_ID,INTEGRAL
        from TB_INTERRANKING
        order by INTEGRAL DESC;
    </select>

    <!--获取积分前20名-->
    <select id="rankingTop" parameterType="pd" resultType="pd">
        select INTEGRAL_ID,INTEGRAL
        from TB_INTERRANKING
        order by INTEGRAL DESC limit 20;
    </select>



    <!-- 获取积分前后以及本身数据 -->
    <select id="nearbyRanking" parameterType="pd" resultType="pd">
		select  INTEGRAL_ID,INTEGRAL,ROWNUM
from (SELECT
    obj.INTEGRAL_ID,
    obj.INTEGRAL,
    CASE
WHEN @rowtotal = obj.INTEGRAL THEN
    @rownum
WHEN @rowtotal := obj.INTEGRAL THEN
    @rownum :=@rownum + 1
WHEN @rowtotal = 0 THEN
    @rownum :=@rownum + 1
END AS rownum
FROM
    (
        SELECT
            INTEGRAL_ID,
            INTEGRAL
        FROM
            TB_INTERRANKING
        ORDER BY
            INTEGRAL DESC
    ) AS obj,
    (SELECT @rownum := 0 ,@rowtotal := NULL) r) as text

    where rownum + 1 =

    (select rownum
from (SELECT
    obj.INTEGRAL_ID,
    obj.INTEGRAL,
    CASE
WHEN @rowtotal = obj.INTEGRAL THEN
    @rownum
WHEN @rowtotal := obj.INTEGRAL THEN
    @rownum :=@rownum + 1
WHEN @rowtotal = 0 THEN
    @rownum :=@rownum + 1
END AS rownum
FROM
    (
        SELECT
            INTEGRAL_ID,
            INTEGRAL
        FROM
            TB_INTERRANKING
        ORDER BY
            INTEGRAL DESC
    ) AS obj,
    (SELECT @rownum := 0 ,@rowtotal := NULL) r) as text
    where INTEGRAL_ID = #{INTEGRAL_ID})

    or rownum - 1 =

    (select rownum
from (SELECT
    obj.INTEGRAL_ID,
    obj.INTEGRAL,
    CASE
WHEN @rowtotal = obj.INTEGRAL THEN
    @rownum
WHEN @rowtotal := obj.INTEGRAL THEN
    @rownum :=@rownum + 1
WHEN @rowtotal = 0 THEN
    @rownum :=@rownum + 1
END AS rownum
FROM
    (
        SELECT
            INTEGRAL_ID,
            INTEGRAL
        FROM
            TB_INTERRANKING
        ORDER BY
            INTEGRAL DESC
    ) AS obj,
    (SELECT @rownum := 0 ,@rowtotal := NULL) r) as text
    where INTEGRAL_ID = #{INTEGRAL_ID})

    OR rownum =

(select rownum
from (SELECT
    obj.INTEGRAL_ID,
    obj.INTEGRAL,
    CASE
WHEN @rowtotal = obj.INTEGRAL THEN
    @rownum
WHEN @rowtotal := obj.INTEGRAL THEN
    @rownum :=@rownum + 1
WHEN @rowtotal = 0 THEN
    @rownum :=@rownum + 1
END AS rownum
FROM
    (
        SELECT
            INTEGRAL_ID,
            INTEGRAL
        FROM
            TB_INTERRANKING
        ORDER BY
            INTEGRAL DESC
    ) AS obj,
    (SELECT @rownum := 0 ,@rowtotal := NULL) r) as text
    where INTEGRAL_ID = #{INTEGRAL_ID})
	</select>
</mapper>
